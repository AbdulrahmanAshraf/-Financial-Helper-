<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        cpzp6H8BLI9c8nuCc7QAAAAASUVORK5CYII=
</value>
  </data>
</root>